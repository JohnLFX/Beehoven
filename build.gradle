plugins {
    id 'java'
    id 'maven-publish'
}

group 'dev.roundtable'
version '1.0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    
    // Unit Testing
    testCompile group: 'org.testng', name: 'testng', version: '6.+'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.+'
    testCompile group: 'org.apache.commons', name: 'commons-text', version: '1.+'

    // Integration Testing
    testCompile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.27.+'
    testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.+'

    // Database Connection Pooling Library
    compile group: 'com.zaxxer', name: 'HikariCP', version: '+'

    // MySQL Database Driver
    compile group: 'mysql', name: 'mysql-connector-java', version: '+'

    // Web Framework
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.+'

    // JSON Serialization
    compile group: 'com.google.code.gson', name: 'gson', version: '2.+'

    // Logging
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.+'

    // NotNull / Nullable Annotations
    compile group: 'org.jetbrains', name: 'annotations', version: '+'

    // Google collections library (Caches)
    compile group: 'com.google.guava', name: 'guava', version: '27.+'

}

test {
    useTestNG()
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compileClasspath.files.collect { "$it.name" }.join(' '),
                'Main-Class': 'dev.roundtable.beehoven.Start'
        )
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

artifacts {
    archives jar
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/" + System.getenv("GITHUB_REPOSITORY"))
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
